@using DepartureBoards.Data
@using MudBlazor

<style>
    .my-column-limit {
        max-width: 50px;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
    }
</style>

<div style="overflow-x:auto;">
    <MudDataGrid Items="Departures"
                 Dense="true"
                 Striped="true"
                 Bordered="true"
                 Elevation="0"
                 Square="true"
                 Outlined="true"
                 SortMode="SortMode.Single"
                 Breakpoint="Breakpoint.None">
        @*     <ToolBarContent>
            <MudText>@StopName</MudText>
        </ToolBarContent> *@
        <ToolBarContent>
            <MudText Typo="Typo.h6">@StopName</MudText>
            <MudSpacer />
            <MudIconButton Icon="@Icons.Material.Filled.Edit"
                Color="Color.Primary"
                Size="Size.Small"
                OnClick="OnEditClicked" />
            <MudIconButton Icon="@Icons.Material.Filled.Delete"
                Color="Color.Error"
                Size="Size.Small"
                OnClick="OnDeleteClicked"/>

        </ToolBarContent>
        <Columns>
            @if (PlatformCode is null)
            {
                <PropertyColumn Title="" Property="departure => departure.Stop.PlatformCode" Sortable="true" Style="max-width: 50px;"></PropertyColumn>
                <PropertyColumn Title="Line" Property="departure => departure.Route.ShortName" Sortable="false"></PropertyColumn>
                <PropertyColumn Title="Direction" Property="departure => departure.Trip.Headsign" Sortable="false"></PropertyColumn>
                <PropertyColumn Title="Min" Property="departure => departure.DepartureTimestamp.Minutes" Sortable="true" CellClass="my-column-limit"></PropertyColumn>
            }
            else
            {
                <PropertyColumn Title="@PlatformCode" Property="departure => departure.Route.ShortName" Sortable="false"></PropertyColumn>
                <PropertyColumn Title="Direction" Property="departure => departure.Trip.Headsign" Sortable="false"></PropertyColumn>
                <PropertyColumn Title="Min" Property="departure => departure.DepartureTimestamp.Minutes" Sortable="true" Style="max-width: 50px;"></PropertyColumn>
            }

        </Columns>
    </MudDataGrid>
</div>

@code {
    [Parameter]
    public IEnumerable<Departure> Departures { get; set; }
    [Parameter]
    public string StopName { get; set; }
    [Parameter]
    public string? PlatformCode { get; set; }
    [Parameter]
    public string Username { get; set; }
    [Parameter]
    public EventCallback<string> OnDelete { get; set; }
    [Parameter]
    public EventCallback<string> OnEdit { get; set; }

    /// <summary>
    /// Deletes the board from database
    /// </summary>
    /// <returns></returns>
    public async Task OnDeleteClicked()
    {
        if (OnDelete.HasDelegate)
        {
            await OnDelete.InvokeAsync(StopName);
        }
    }
    /// <summary>
    /// Edits the board
    /// </summary>
    public void OnEditClicked()
    {
        if (OnEdit.HasDelegate)
        {
            OnEdit.InvokeAsync(StopName);
        }
    }
}
 